"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Event Capture API
 * The Event Capture API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v0`. While the API does support a default version, that version will change over time and therefore should not be used in production code!
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreatedHighlightV1ToJSON = exports.CreatedHighlightV1FromJSONTyped = exports.CreatedHighlightV1FromJSON = exports.CreatedHighlightV1TypeEnum = void 0;
/**
* @export
* @enum {string}
*/
var CreatedHighlightV1TypeEnum;
(function (CreatedHighlightV1TypeEnum) {
    CreatedHighlightV1TypeEnum["OrgOpenstaxEcCreatedHighlightV1"] = "org.openstax.ec.created_highlight_v1";
})(CreatedHighlightV1TypeEnum = exports.CreatedHighlightV1TypeEnum || (exports.CreatedHighlightV1TypeEnum = {}));
function CreatedHighlightV1FromJSON(json) {
    return CreatedHighlightV1FromJSONTyped(json, false);
}
exports.CreatedHighlightV1FromJSON = CreatedHighlightV1FromJSON;
function CreatedHighlightV1FromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'clientClockOccurredAt': (new Date(json['client_clock_occurred_at'])),
        'clientClockSentAt': (new Date(json['client_clock_sent_at'])),
        'type': json['type'],
        'sourceUri': json['source_uri'],
        'sessionUuid': json['session_uuid'],
        'sessionOrder': json['session_order'],
        'highlightId': json['highlight_id'],
        'sourceType': json['source_type'],
        'sourceId': json['source_id'],
        'sourceMetadata': json['source_metadata'],
        'annotation': json['annotation'],
        'anchor': json['anchor'],
        'color': json['color'],
        'locationStrategies': json['location_strategies'],
        'scopeId': json['scope_id'],
    };
}
exports.CreatedHighlightV1FromJSONTyped = CreatedHighlightV1FromJSONTyped;
function CreatedHighlightV1ToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'client_clock_occurred_at': (value.clientClockOccurredAt.toISOString()),
        'client_clock_sent_at': (value.clientClockSentAt.toISOString()),
        'type': value.type,
        'source_uri': value.sourceUri,
        'session_uuid': value.sessionUuid,
        'session_order': value.sessionOrder,
        'highlight_id': value.highlightId,
        'source_type': value.sourceType,
        'source_id': value.sourceId,
        'source_metadata': value.sourceMetadata,
        'annotation': value.annotation,
        'anchor': value.anchor,
        'color': value.color,
        'location_strategies': value.locationStrategies,
        'scope_id': value.scopeId,
    };
}
exports.CreatedHighlightV1ToJSON = CreatedHighlightV1ToJSON;
