"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenStax Event Capture API
 * The Event Capture API for OpenStax.  Requests to this API should include `application/json` in the `Accept` header.  The desired API version is specified in the request URL, e.g. `[domain]/api/v0`. While the API does support a default version, that version will change over time and therefore should not be used in production code!
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChangedStateV1ToJSON = exports.ChangedStateV1FromJSONTyped = exports.ChangedStateV1FromJSON = exports.ChangedStateV1TypeEnum = void 0;
/**
* @export
* @enum {string}
*/
var ChangedStateV1TypeEnum;
(function (ChangedStateV1TypeEnum) {
    ChangedStateV1TypeEnum["OrgOpenstaxEcChangedStateV1"] = "org.openstax.ec.changed_state_v1";
})(ChangedStateV1TypeEnum = exports.ChangedStateV1TypeEnum || (exports.ChangedStateV1TypeEnum = {}));
function ChangedStateV1FromJSON(json) {
    return ChangedStateV1FromJSONTyped(json, false);
}
exports.ChangedStateV1FromJSON = ChangedStateV1FromJSON;
function ChangedStateV1FromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'clientClockOccurredAt': (new Date(json['client_clock_occurred_at'])),
        'clientClockSentAt': (new Date(json['client_clock_sent_at'])),
        'type': json['type'],
        'sourceUri': json['source_uri'],
        'sessionUuid': json['session_uuid'],
        'sessionOrder': json['session_order'],
        'stateType': json['state_type'],
        'current': json['current'],
        'previous': json['previous'],
    };
}
exports.ChangedStateV1FromJSONTyped = ChangedStateV1FromJSONTyped;
function ChangedStateV1ToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'client_clock_occurred_at': (value.clientClockOccurredAt.toISOString()),
        'client_clock_sent_at': (value.clientClockSentAt.toISOString()),
        'type': value.type,
        'source_uri': value.sourceUri,
        'session_uuid': value.sessionUuid,
        'session_order': value.sessionOrder,
        'state_type': value.stateType,
        'current': value.current,
        'previous': value.previous,
    };
}
exports.ChangedStateV1ToJSON = ChangedStateV1ToJSON;
